<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd">

<!--	扫描controller类-->
	<context:component-scan base-package="com.jxufe.sport_news.**.controller">
		<context:include-filter type="annotation"
								expression="org.springframework.stereotype.Controller"/>
		<context:include-filter type="annotation"
								expression="org.springframework.web.bind.annotation.ControllerAdvice"/>

	</context:component-scan>

<!--	配置处理器适配器和处理器映射器-->
	<mvc:annotation-driven/>

	<mvc:annotation-driven content-negotiation-manager="contentNegotiationManager">
		<mvc:message-converters register-defaults="true">
			<bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter"/>
			<!-- 将StringHttpMessageConverter的默认编码设为UTF-8 -->
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<constructor-arg value="UTF-8" />
			</bean>
			<!-- 将Jackson2HttpMessageConverter的默认格式化输出设为true -->
			<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
				<property name="prettyPrint" value="true"/>
				<property name="supportedMediaTypes">
					<list>
						<value>application/json;charset=UTF-8</value>
					</list>
				</property>
			</bean>

		</mvc:message-converters>
		<mvc:async-support default-timeout="3000"/>
	</mvc:annotation-driven>

	<!-- REST中根据URL后缀自动判定Content-Type及相应的View -->
	<bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
		<property name="ignoreAcceptHeader" value="true" />
		<property name="defaultContentType" value="application/json" />
		<property name="mediaTypes" >
			<value>
				json=application/json
				xml=application/xml
			</value>
		</property>
	</bean>


	<mvc:resources mapping="/static/**" location="/static/"/>
	<mvc:resources mapping="/WEB-INF/**" location="/WEB-INF/"/>
	<mvc:resources mapping="/uploadFiles/**" location="/uploadFiles/"/>

	<!--配置视图渲染以及前缀后缀-->
	<bean
			class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
				  value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/pages/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- 支持上传文件 -->
	<bean id="multipartResolver"
		  class="org.springframework.web.multipart.commons.CommonsMultipartResolver" >
		<property name="defaultEncoding" value="utf-8" />

		<property name="maxUploadSize" value="104857600"/>

		<property name="maxInMemorySize" value="4096"/>
	</bean>
	<mvc:interceptors>
		<!-- 使用bean定义一个Interceptor，直接定义在mvc:interceptors根下面的Interceptor将拦截所有的请求 -->
		<mvc:interceptor>
			<mvc:mapping path="/admin/init-admin"/>
			<mvc:mapping path="/admin/init-addadmin"/>
			<mvc:mapping path="/sys-catgory/init-catgory"/>
			<mvc:mapping path="/sys-catgory/init-addcatgory"/>
			<mvc:mapping path="/sys-comment/init-comment"/>
			<mvc:mapping path="/sys-headline/init-head"/>
			<mvc:mapping path="/sys-headline/init-nothead"/>
			<mvc:mapping path="/sys-news/Getindex"/>
			<mvc:mapping path="/sys-news/GetNews"/>
			<mvc:mapping path="/sys-news/SearchNew"/>
			<mvc:mapping path="/sys-news/GetNewsEdit"/>
			<!-- 定义在mvc:interceptor下面的表示是对特定的请求才进行拦截的 -->
			<bean class="com.jxufe.sport_news.Common.SecurityInterceptor"/>
		</mvc:interceptor>
	</mvc:interceptors>

	<bean id="handlerExceptionResolver"
		  class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<prop key="smartcrud.common.exception.AuthorizationException">redirect:/adminlogin</prop>
			</props>
		</property>
	</bean>
</beans>